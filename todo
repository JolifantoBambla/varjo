
* need a way to specify other details like *layout-size*

* add all the texture lookup functions
* read up on setting variables as invariant
* find out what the fuck centroid means

* add preprocessor extensions to translate function
* check out _line_ _file_ and _version_ macros from glsl, are they
  used?
* add lisp macros wrappers for this functionality
* Massive cleanup of code
* glsl-defun doesnt use the arg names we give it

-----------------------------------------------------

* labels appends it's functions (obviously dangerous)
* Need to support nested structures for uniforms
* out vars could legitimately have the same name if they
  are used inside an if statement.

* readonly not working
(cgl:defprogram? test ((a :float) &uniform (b :float))
         (:vertex (progn (if (> a 0)
                             (+ 2 3))
                         (setf b 1.0)))
         (:fragment (out done (* b 1))))